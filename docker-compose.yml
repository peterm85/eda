version: '3'
services:

  mongo:
    image: mongo:4.4.10
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=eda
      #- MONGO_INITDB_ROOT_USERNAME=admin
      #- MONGO_INITDB_ROOT_PASSWORD=Passwd#01
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: [ "--replSet", "rs0", "--bind_ip_all" ]

  mongo-express:
    image: library/mongo-express:latest
    container_name: mongo-express
    ports:
      - "9090:8081"
    environment:
      #- ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      #- ME_CONFIG_MONGODB_ADMINPASSWORD=Passwd#01
      - ME_CONFIG_MONGODB_SERVER=mongo
    restart: unless-stopped

#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - "2181:2181"

#  kafka:
#    image: wurstmeister/kafka:latest
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#    depends_on:
#      - zookeeper

#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: kafka-ui
#    ports:
#      - "9001:8080"
#    depends_on:
#      - zookeeper
#      - kafka
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
